WARNING:tensorflow:From /home/amir/Desktop/smartforceps_ai_models/smartforceps_dl_prediction_models_tf2/smartforceps_segment_model/unet_info.py:29: The name tf.keras.backend.set_session is deprecated. Please use tf.compat.v1.keras.backend.set_session instead.

DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Keraleeyam' (Keraleeyam.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal bold normal>) = 1.2440909090909091
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Uroob' (Uroob.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'RaghuMalayalam' (RaghuMalayalamSans-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chilanka' (Chilanka-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Karumbi' (Karumbi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Meera' (Meera.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal normal normal>) = 10.0
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal bold condensed>) = 10.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Dyuthi' (Dyuthi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal book normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal bold condensed>) = 11.535
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal bold normal>) = 2.244090909090909
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal medium normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal medium normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal regular normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal bold normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal bold normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal light normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal light normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/usr/share/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
INFO:root:mean_time=1
INFO:root:Epoch: 1 loss: 0.4187 accuracy0.8291 val_loss: 0.6302 val_accuracy0.6557%

INFO:root:Epoch: 2 loss: 0.2793 accuracy0.9034 val_loss: 0.8133 val_accuracy0.6500%

INFO:root:Epoch: 3 loss: 0.2606 accuracy0.9053 val_loss: 0.9967 val_accuracy0.6257%

INFO:root:Epoch: 4 loss: 0.2393 accuracy0.9115 val_loss: 0.9529 val_accuracy0.6274%

INFO:root:Epoch: 5 loss: 0.2010 accuracy0.9282 val_loss: 0.9216 val_accuracy0.6244%

INFO:root:Epoch: 6 loss: 0.1874 accuracy0.9325 val_loss: 1.1218 val_accuracy0.6475%

INFO:root:Epoch: 7 loss: 0.1921 accuracy0.9318 val_loss: 1.4268 val_accuracy0.6711%

INFO:root:Epoch: 8 loss: 0.2106 accuracy0.9228 val_loss: 0.8902 val_accuracy0.6979%

INFO:root:Epoch: 9 loss: 0.1928 accuracy0.9236 val_loss: 1.2163 val_accuracy0.7112%

INFO:root:Epoch: 10 loss: 0.1596 accuracy0.9404 val_loss: 0.5221 val_accuracy0.8433%

INFO:root:Epoch: 11 loss: 0.1690 accuracy0.9354 val_loss: 1.4021 val_accuracy0.6385%

INFO:root:Epoch: 12 loss: 0.1441 accuracy0.9440 val_loss: 0.6445 val_accuracy0.7766%

INFO:root:Epoch: 13 loss: 0.1432 accuracy0.9469 val_loss: 0.2882 val_accuracy0.9088%

INFO:root:Epoch: 14 loss: 0.1275 accuracy0.9532 val_loss: 0.5639 val_accuracy0.8449%

INFO:root:Epoch: 15 loss: 0.1442 accuracy0.9475 val_loss: 0.3259 val_accuracy0.9097%

INFO:root:Epoch: 16 loss: 0.1384 accuracy0.9466 val_loss: 0.2826 val_accuracy0.9152%

INFO:root:Epoch: 17 loss: 0.1267 accuracy0.9525 val_loss: 0.2191 val_accuracy0.9367%

INFO:root:Epoch: 18 loss: 0.1206 accuracy0.9538 val_loss: 0.1834 val_accuracy0.9440%

INFO:root:Epoch: 19 loss: 0.1330 accuracy0.9511 val_loss: 0.1867 val_accuracy0.9386%

INFO:root:Epoch: 20 loss: 0.1094 accuracy0.9569 val_loss: 0.1658 val_accuracy0.9458%

INFO:root:Epoch: 21 loss: 0.1210 accuracy0.9558 val_loss: 0.1812 val_accuracy0.9424%

INFO:root:Epoch: 22 loss: 0.1136 accuracy0.9557 val_loss: 0.1787 val_accuracy0.9146%

INFO:root:Epoch: 23 loss: 0.1170 accuracy0.9568 val_loss: 0.1607 val_accuracy0.9433%

INFO:root:Epoch: 24 loss: 0.1001 accuracy0.9634 val_loss: 0.4396 val_accuracy0.8685%

INFO:root:Epoch: 25 loss: 0.0868 accuracy0.9667 val_loss: 0.1868 val_accuracy0.9347%

INFO:root:Epoch: 26 loss: 0.0899 accuracy0.9657 val_loss: 0.9327 val_accuracy0.7666%

INFO:root:Epoch: 27 loss: 0.0830 accuracy0.9687 val_loss: 0.3762 val_accuracy0.8620%

INFO:root:Epoch: 28 loss: 0.0922 accuracy0.9656 val_loss: 0.8059 val_accuracy0.7980%

INFO:root:Epoch: 29 loss: 0.1025 accuracy0.9642 val_loss: 0.4114 val_accuracy0.8847%

INFO:root:Epoch: 30 loss: 0.0936 accuracy0.9641 val_loss: 0.9049 val_accuracy0.7789%

INFO:root:Epoch: 31 loss: 0.0794 accuracy0.9707 val_loss: 1.1781 val_accuracy0.7425%

INFO:root:Epoch: 32 loss: 0.0752 accuracy0.9712 val_loss: 0.2041 val_accuracy0.9152%

INFO:root:Epoch: 33 loss: 0.0912 accuracy0.9658 val_loss: 0.2075 val_accuracy0.9271%

INFO:root:Epoch: 34 loss: 0.0922 accuracy0.9667 val_loss: 0.1467 val_accuracy0.9485%

INFO:root:Epoch: 35 loss: 0.0774 accuracy0.9721 val_loss: 0.1619 val_accuracy0.9487%

INFO:root:Epoch: 36 loss: 0.0795 accuracy0.9708 val_loss: 0.1484 val_accuracy0.9601%

INFO:root:Epoch: 37 loss: 0.0696 accuracy0.9743 val_loss: 0.1686 val_accuracy0.9573%

INFO:root:Epoch: 38 loss: 0.0665 accuracy0.9746 val_loss: 0.3644 val_accuracy0.8978%

INFO:root:Epoch: 39 loss: 0.0609 accuracy0.9763 val_loss: 0.1338 val_accuracy0.9553%

INFO:root:Epoch: 40 loss: 0.0617 accuracy0.9775 val_loss: 0.1540 val_accuracy0.9519%

INFO:root:Epoch: 41 loss: 0.0872 accuracy0.9695 val_loss: 0.5866 val_accuracy0.8950%

INFO:root:Epoch: 42 loss: 0.0682 accuracy0.9758 val_loss: 0.1370 val_accuracy0.9593%

INFO:root:Epoch: 43 loss: 0.0516 accuracy0.9806 val_loss: 0.4980 val_accuracy0.8327%

INFO:root:Epoch: 44 loss: 0.0506 accuracy0.9821 val_loss: 0.1663 val_accuracy0.9592%

INFO:root:Epoch: 45 loss: 0.0708 accuracy0.9741 val_loss: 0.1524 val_accuracy0.9578%

INFO:root:Epoch: 46 loss: 0.0653 accuracy0.9759 val_loss: 0.1562 val_accuracy0.9585%

INFO:root:Epoch: 47 loss: 0.0546 accuracy0.9798 val_loss: 0.1682 val_accuracy0.9539%

INFO:root:Epoch: 48 loss: 0.0497 accuracy0.9821 val_loss: 0.1821 val_accuracy0.9487%

INFO:root:Epoch: 49 loss: 0.0578 accuracy0.9789 val_loss: 0.1391 val_accuracy0.9590%

INFO:root:Epoch: 50 loss: 0.0487 accuracy0.9824 val_loss: 0.1515 val_accuracy0.9547%

INFO:root:mean_time=2
INFO:root:Epoch: 1 loss: 0.4456 accuracy0.7937 val_loss: 0.6574 val_accuracy0.6431%

INFO:root:Epoch: 2 loss: 0.2859 accuracy0.8916 val_loss: 0.7476 val_accuracy0.6447%

INFO:root:Epoch: 3 loss: 0.2666 accuracy0.8925 val_loss: 0.9491 val_accuracy0.6363%

INFO:root:Epoch: 4 loss: 0.2501 accuracy0.9001 val_loss: 1.1702 val_accuracy0.6375%

INFO:root:Epoch: 5 loss: 0.2076 accuracy0.9191 val_loss: 1.2253 val_accuracy0.6074%

INFO:root:Epoch: 6 loss: 0.2220 accuracy0.9139 val_loss: 1.3077 val_accuracy0.6368%

INFO:root:Epoch: 7 loss: 0.1846 accuracy0.9296 val_loss: 1.6048 val_accuracy0.6429%

INFO:root:Epoch: 8 loss: 0.1787 accuracy0.9318 val_loss: 0.9495 val_accuracy0.6988%

INFO:root:Epoch: 9 loss: 0.1836 accuracy0.9275 val_loss: 1.5152 val_accuracy0.6709%

INFO:root:Epoch: 10 loss: 0.1544 accuracy0.9409 val_loss: 1.9548 val_accuracy0.6672%

INFO:root:Epoch: 11 loss: 0.1533 accuracy0.9424 val_loss: 1.3155 val_accuracy0.7075%

INFO:root:Epoch: 12 loss: 0.1394 accuracy0.9460 val_loss: 0.6099 val_accuracy0.8712%

INFO:root:Epoch: 13 loss: 0.1555 accuracy0.9401 val_loss: 1.7966 val_accuracy0.7036%

INFO:root:Epoch: 14 loss: 0.1439 accuracy0.9458 val_loss: 1.0128 val_accuracy0.7388%

INFO:root:Epoch: 15 loss: 0.1464 accuracy0.9422 val_loss: 0.6866 val_accuracy0.8297%

INFO:root:Epoch: 16 loss: 0.1300 accuracy0.9489 val_loss: 0.3232 val_accuracy0.9003%

INFO:root:Epoch: 17 loss: 0.1122 accuracy0.9569 val_loss: 0.2147 val_accuracy0.9419%

INFO:root:Epoch: 18 loss: 0.1106 accuracy0.9581 val_loss: 0.2347 val_accuracy0.9155%

INFO:root:Epoch: 19 loss: 0.1155 accuracy0.9555 val_loss: 0.2178 val_accuracy0.9283%

INFO:root:Epoch: 20 loss: 0.1175 accuracy0.9559 val_loss: 0.6381 val_accuracy0.8318%

INFO:root:Epoch: 21 loss: 0.0979 accuracy0.9633 val_loss: 0.2216 val_accuracy0.9360%

INFO:root:Epoch: 22 loss: 0.1438 accuracy0.9450 val_loss: 0.4606 val_accuracy0.8722%

INFO:root:Epoch: 23 loss: 0.1073 accuracy0.9582 val_loss: 0.1541 val_accuracy0.9543%

INFO:root:Epoch: 24 loss: 0.1012 accuracy0.9604 val_loss: 0.1982 val_accuracy0.9485%

INFO:root:Epoch: 25 loss: 0.0923 accuracy0.9631 val_loss: 0.3508 val_accuracy0.8890%

INFO:root:Epoch: 26 loss: 0.1060 accuracy0.9598 val_loss: 0.1754 val_accuracy0.9468%

INFO:root:Epoch: 27 loss: 0.1026 accuracy0.9604 val_loss: 0.1908 val_accuracy0.9390%

INFO:root:Epoch: 28 loss: 0.0907 accuracy0.9653 val_loss: 0.1708 val_accuracy0.9549%

INFO:root:Epoch: 29 loss: 0.0811 accuracy0.9693 val_loss: 0.1822 val_accuracy0.9457%

INFO:root:Epoch: 30 loss: 0.0714 accuracy0.9730 val_loss: 0.2371 val_accuracy0.9276%

INFO:root:Epoch: 31 loss: 0.0613 accuracy0.9772 val_loss: 0.1792 val_accuracy0.9475%

INFO:root:Epoch: 32 loss: 0.0653 accuracy0.9756 val_loss: 0.1414 val_accuracy0.9583%

INFO:root:Epoch: 33 loss: 0.0572 accuracy0.9791 val_loss: 0.1476 val_accuracy0.9543%

INFO:root:Epoch: 34 loss: 0.0561 accuracy0.9798 val_loss: 0.1313 val_accuracy0.9624%

INFO:root:Epoch: 35 loss: 0.0620 accuracy0.9776 val_loss: 0.1375 val_accuracy0.9573%

INFO:root:Epoch: 36 loss: 0.0621 accuracy0.9771 val_loss: 0.1504 val_accuracy0.9462%

INFO:root:Epoch: 37 loss: 0.0525 accuracy0.9804 val_loss: 0.1682 val_accuracy0.9511%

INFO:root:Epoch: 38 loss: 0.0597 accuracy0.9782 val_loss: 0.1213 val_accuracy0.9623%

INFO:root:Epoch: 39 loss: 0.0512 accuracy0.9815 val_loss: 0.1230 val_accuracy0.9658%

INFO:root:Epoch: 40 loss: 0.0530 accuracy0.9807 val_loss: 0.1824 val_accuracy0.9461%

INFO:root:Epoch: 41 loss: 0.0498 accuracy0.9813 val_loss: 0.2479 val_accuracy0.9340%

INFO:root:Epoch: 42 loss: 0.0405 accuracy0.9847 val_loss: 0.1334 val_accuracy0.9606%

INFO:root:Epoch: 43 loss: 0.0362 accuracy0.9867 val_loss: 0.1180 val_accuracy0.9620%

INFO:root:Epoch: 44 loss: 0.0424 accuracy0.9839 val_loss: 0.1791 val_accuracy0.9523%

INFO:root:Epoch: 45 loss: 0.0424 accuracy0.9850 val_loss: 0.3025 val_accuracy0.9280%

INFO:root:Epoch: 46 loss: 0.0451 accuracy0.9840 val_loss: 0.1451 val_accuracy0.9550%

INFO:root:Epoch: 47 loss: 0.0333 accuracy0.9873 val_loss: 0.1934 val_accuracy0.9498%

INFO:root:Epoch: 48 loss: 0.0399 accuracy0.9852 val_loss: 0.0881 val_accuracy0.9791%

INFO:root:Epoch: 49 loss: 0.0458 accuracy0.9836 val_loss: 0.1474 val_accuracy0.9568%

INFO:root:Epoch: 50 loss: 0.0404 accuracy0.9843 val_loss: 0.1940 val_accuracy0.9432%

INFO:root:mean_time=3
INFO:root:Epoch: 1 loss: 0.4269 accuracy0.8160 val_loss: 0.6635 val_accuracy0.5531%

INFO:root:Epoch: 2 loss: 0.2953 accuracy0.8914 val_loss: 0.7405 val_accuracy0.5362%

INFO:root:Epoch: 3 loss: 0.2581 accuracy0.9039 val_loss: 1.0374 val_accuracy0.5362%

INFO:root:Epoch: 4 loss: 0.2160 accuracy0.9194 val_loss: 1.1799 val_accuracy0.5362%

INFO:root:Epoch: 5 loss: 0.2145 accuracy0.9157 val_loss: 1.9236 val_accuracy0.4818%

INFO:root:Epoch: 6 loss: 0.2312 accuracy0.9116 val_loss: 1.2064 val_accuracy0.6778%

INFO:root:Epoch: 7 loss: 0.2097 accuracy0.9111 val_loss: 0.7349 val_accuracy0.8089%

INFO:root:Epoch: 8 loss: 0.1965 accuracy0.9249 val_loss: 1.8068 val_accuracy0.6479%

INFO:root:Epoch: 9 loss: 0.1808 accuracy0.9265 val_loss: 1.3699 val_accuracy0.7090%

INFO:root:Epoch: 10 loss: 0.1496 accuracy0.9431 val_loss: 1.4778 val_accuracy0.6990%

INFO:root:Epoch: 11 loss: 0.1359 accuracy0.9470 val_loss: 1.4031 val_accuracy0.6971%

INFO:root:Epoch: 12 loss: 0.1432 accuracy0.9415 val_loss: 1.3249 val_accuracy0.7020%

INFO:root:Epoch: 13 loss: 0.1201 accuracy0.9510 val_loss: 1.3299 val_accuracy0.7279%

INFO:root:Epoch: 14 loss: 0.1395 accuracy0.9458 val_loss: 0.5256 val_accuracy0.8834%

INFO:root:Epoch: 15 loss: 0.1461 accuracy0.9393 val_loss: 0.7676 val_accuracy0.7239%

INFO:root:Epoch: 16 loss: 0.1259 accuracy0.9547 val_loss: 1.5328 val_accuracy0.7470%

INFO:root:Epoch: 17 loss: 0.1347 accuracy0.9469 val_loss: 0.4150 val_accuracy0.8889%

INFO:root:Epoch: 18 loss: 0.1125 accuracy0.9556 val_loss: 0.3736 val_accuracy0.9180%

INFO:root:Epoch: 19 loss: 0.1201 accuracy0.9508 val_loss: 0.2528 val_accuracy0.9184%

INFO:root:Epoch: 20 loss: 0.1000 accuracy0.9619 val_loss: 0.2337 val_accuracy0.9336%

INFO:root:Epoch: 21 loss: 0.0996 accuracy0.9612 val_loss: 0.1806 val_accuracy0.9504%

INFO:root:Epoch: 22 loss: 0.0914 accuracy0.9630 val_loss: 0.1578 val_accuracy0.9495%

INFO:root:Epoch: 23 loss: 0.1001 accuracy0.9615 val_loss: 0.1998 val_accuracy0.9361%

INFO:root:Epoch: 24 loss: 0.0978 accuracy0.9618 val_loss: 0.1887 val_accuracy0.9545%

INFO:root:Epoch: 25 loss: 0.0868 accuracy0.9646 val_loss: 0.2329 val_accuracy0.9267%

INFO:root:Epoch: 26 loss: 0.0883 accuracy0.9647 val_loss: 0.1949 val_accuracy0.9396%

INFO:root:Epoch: 27 loss: 0.0879 accuracy0.9670 val_loss: 0.2294 val_accuracy0.9472%

INFO:root:Epoch: 28 loss: 0.0962 accuracy0.9604 val_loss: 0.2012 val_accuracy0.9404%

INFO:root:Epoch: 29 loss: 0.0772 accuracy0.9684 val_loss: 0.1986 val_accuracy0.9473%

INFO:root:Epoch: 30 loss: 0.0646 accuracy0.9754 val_loss: 0.1608 val_accuracy0.9537%

INFO:root:Epoch: 31 loss: 0.0655 accuracy0.9746 val_loss: 0.2031 val_accuracy0.9500%

INFO:root:Epoch: 32 loss: 0.0636 accuracy0.9776 val_loss: 0.2076 val_accuracy0.9380%

INFO:root:Epoch: 33 loss: 0.0651 accuracy0.9743 val_loss: 0.2041 val_accuracy0.9515%

INFO:root:Epoch: 34 loss: 0.0534 accuracy0.9798 val_loss: 0.1833 val_accuracy0.9524%

INFO:root:Epoch: 35 loss: 0.0662 accuracy0.9752 val_loss: 0.2528 val_accuracy0.9522%

INFO:root:Epoch: 36 loss: 0.0669 accuracy0.9734 val_loss: 0.2147 val_accuracy0.9461%

INFO:root:Epoch: 37 loss: 0.0593 accuracy0.9774 val_loss: 0.1993 val_accuracy0.9428%

INFO:root:Epoch: 38 loss: 0.0506 accuracy0.9816 val_loss: 0.2435 val_accuracy0.9465%

INFO:root:Epoch: 39 loss: 0.0394 accuracy0.9859 val_loss: 0.1568 val_accuracy0.9540%

INFO:root:Epoch: 40 loss: 0.0429 accuracy0.9834 val_loss: 0.1676 val_accuracy0.9560%

INFO:root:Epoch: 41 loss: 0.0432 accuracy0.9839 val_loss: 0.1973 val_accuracy0.9539%

INFO:root:Epoch: 42 loss: 0.0465 accuracy0.9826 val_loss: 0.2001 val_accuracy0.9443%

INFO:root:Epoch: 43 loss: 0.0427 accuracy0.9834 val_loss: 0.2159 val_accuracy0.9506%

INFO:root:Epoch: 44 loss: 0.0423 accuracy0.9838 val_loss: 0.1113 val_accuracy0.9614%

INFO:root:Epoch: 45 loss: 0.0380 accuracy0.9859 val_loss: 0.2071 val_accuracy0.9365%

INFO:root:Epoch: 46 loss: 0.0398 accuracy0.9848 val_loss: 0.2654 val_accuracy0.9432%

INFO:root:Epoch: 47 loss: 0.0474 accuracy0.9821 val_loss: 0.1674 val_accuracy0.9562%

INFO:root:Epoch: 48 loss: 0.0475 accuracy0.9828 val_loss: 0.2017 val_accuracy0.9584%

INFO:root:Epoch: 49 loss: 0.0307 accuracy0.9879 val_loss: 0.1705 val_accuracy0.9506%

INFO:root:Epoch: 50 loss: 0.0359 accuracy0.9868 val_loss: 0.1962 val_accuracy0.9477%

INFO:root:mean_time=4
INFO:root:Epoch: 1 loss: 0.4345 accuracy0.8047 val_loss: 0.6665 val_accuracy0.6742%

INFO:root:Epoch: 2 loss: 0.2677 accuracy0.9008 val_loss: 0.6563 val_accuracy0.6462%

INFO:root:Epoch: 3 loss: 0.2600 accuracy0.9000 val_loss: 0.8183 val_accuracy0.5824%

INFO:root:Epoch: 4 loss: 0.2293 accuracy0.9108 val_loss: 1.1203 val_accuracy0.6070%

INFO:root:Epoch: 5 loss: 0.2307 accuracy0.9070 val_loss: 1.1809 val_accuracy0.5874%

INFO:root:Epoch: 6 loss: 0.2036 accuracy0.9221 val_loss: 2.0951 val_accuracy0.5749%

INFO:root:Epoch: 7 loss: 0.1824 accuracy0.9276 val_loss: 1.9015 val_accuracy0.5843%

INFO:root:Epoch: 8 loss: 0.1800 accuracy0.9307 val_loss: 1.3447 val_accuracy0.7048%

INFO:root:Epoch: 9 loss: 0.1802 accuracy0.9308 val_loss: 1.6920 val_accuracy0.7040%

INFO:root:Epoch: 10 loss: 0.1695 accuracy0.9348 val_loss: 0.4208 val_accuracy0.8556%

INFO:root:Epoch: 11 loss: 0.1651 accuracy0.9345 val_loss: 0.6199 val_accuracy0.8583%

INFO:root:Epoch: 12 loss: 0.1493 accuracy0.9415 val_loss: 0.6343 val_accuracy0.7940%

INFO:root:Epoch: 13 loss: 0.1390 accuracy0.9440 val_loss: 0.6945 val_accuracy0.8284%

INFO:root:Epoch: 14 loss: 0.1434 accuracy0.9439 val_loss: 0.4147 val_accuracy0.8327%

INFO:root:Epoch: 15 loss: 0.1352 accuracy0.9492 val_loss: 0.7319 val_accuracy0.7467%

INFO:root:Epoch: 16 loss: 0.1419 accuracy0.9448 val_loss: 0.8200 val_accuracy0.7725%

INFO:root:Epoch: 17 loss: 0.1230 accuracy0.9515 val_loss: 0.6215 val_accuracy0.7666%

INFO:root:Epoch: 18 loss: 0.1317 accuracy0.9478 val_loss: 0.1967 val_accuracy0.9373%

INFO:root:Epoch: 19 loss: 0.1401 accuracy0.9429 val_loss: 0.2765 val_accuracy0.9068%

INFO:root:Epoch: 20 loss: 0.1212 accuracy0.9541 val_loss: 0.1949 val_accuracy0.9427%

INFO:root:Epoch: 21 loss: 0.1199 accuracy0.9520 val_loss: 0.2161 val_accuracy0.9337%

INFO:root:Epoch: 22 loss: 0.1055 accuracy0.9603 val_loss: 0.1772 val_accuracy0.9478%

INFO:root:Epoch: 23 loss: 0.0927 accuracy0.9634 val_loss: 0.1720 val_accuracy0.9354%

INFO:root:Epoch: 24 loss: 0.1035 accuracy0.9603 val_loss: 0.5776 val_accuracy0.7966%

INFO:root:Epoch: 25 loss: 0.1241 accuracy0.9529 val_loss: 0.3680 val_accuracy0.9006%

INFO:root:Epoch: 26 loss: 0.1043 accuracy0.9598 val_loss: 0.2663 val_accuracy0.8946%

INFO:root:Epoch: 27 loss: 0.1282 accuracy0.9490 val_loss: 0.2028 val_accuracy0.9235%

INFO:root:Epoch: 28 loss: 0.1208 accuracy0.9568 val_loss: 0.2130 val_accuracy0.9374%

INFO:root:Epoch: 29 loss: 0.1152 accuracy0.9530 val_loss: 0.3033 val_accuracy0.9200%

INFO:root:Epoch: 30 loss: 0.0931 accuracy0.9646 val_loss: 0.2052 val_accuracy0.9412%

INFO:root:Epoch: 31 loss: 0.0877 accuracy0.9665 val_loss: 0.1722 val_accuracy0.9550%

INFO:root:Epoch: 32 loss: 0.0746 accuracy0.9717 val_loss: 0.1547 val_accuracy0.9536%

INFO:root:Epoch: 33 loss: 0.0806 accuracy0.9694 val_loss: 0.1897 val_accuracy0.9405%

INFO:root:Epoch: 34 loss: 0.0730 accuracy0.9717 val_loss: 0.1339 val_accuracy0.9582%

INFO:root:Epoch: 35 loss: 0.0694 accuracy0.9740 val_loss: 0.2356 val_accuracy0.9219%

INFO:root:Epoch: 36 loss: 0.0694 accuracy0.9750 val_loss: 0.1703 val_accuracy0.9424%

INFO:root:Epoch: 37 loss: 0.0651 accuracy0.9758 val_loss: 0.2459 val_accuracy0.9316%

INFO:root:Epoch: 38 loss: 0.0623 accuracy0.9780 val_loss: 0.1702 val_accuracy0.9535%

INFO:root:Epoch: 39 loss: 0.0878 accuracy0.9693 val_loss: 0.2642 val_accuracy0.9279%

INFO:root:Epoch: 40 loss: 0.0635 accuracy0.9748 val_loss: 0.1503 val_accuracy0.9550%

INFO:root:Epoch: 41 loss: 0.0540 accuracy0.9796 val_loss: 0.1571 val_accuracy0.9586%

INFO:root:Epoch: 42 loss: 0.0582 accuracy0.9786 val_loss: 0.1714 val_accuracy0.9319%

INFO:root:Epoch: 43 loss: 0.0596 accuracy0.9776 val_loss: 0.2338 val_accuracy0.9426%

INFO:root:Epoch: 44 loss: 0.0650 accuracy0.9759 val_loss: 0.1702 val_accuracy0.9511%

INFO:root:Epoch: 45 loss: 0.0458 accuracy0.9839 val_loss: 0.1894 val_accuracy0.9494%

INFO:root:Epoch: 46 loss: 0.0511 accuracy0.9806 val_loss: 0.1728 val_accuracy0.9508%

INFO:root:Epoch: 47 loss: 0.0608 accuracy0.9761 val_loss: 0.2042 val_accuracy0.9412%

INFO:root:Epoch: 48 loss: 0.0490 accuracy0.9827 val_loss: 0.1759 val_accuracy0.9461%

INFO:root:Epoch: 49 loss: 0.0436 accuracy0.9839 val_loss: 0.1719 val_accuracy0.9543%

INFO:root:Epoch: 50 loss: 0.0349 accuracy0.9879 val_loss: 0.2118 val_accuracy0.9509%

INFO:root:mean_time=5
INFO:root:Epoch: 1 loss: 0.3921 accuracy0.8445 val_loss: 0.6849 val_accuracy0.5928%

INFO:root:Epoch: 2 loss: 0.2695 accuracy0.8975 val_loss: 0.7887 val_accuracy0.5818%

INFO:root:Epoch: 3 loss: 0.2503 accuracy0.9025 val_loss: 0.9282 val_accuracy0.5629%

INFO:root:Epoch: 4 loss: 0.2476 accuracy0.9046 val_loss: 1.0562 val_accuracy0.5429%

INFO:root:Epoch: 5 loss: 0.2413 accuracy0.9130 val_loss: 1.2348 val_accuracy0.5405%

INFO:root:Epoch: 6 loss: 0.2346 accuracy0.9081 val_loss: 0.8542 val_accuracy0.7340%

INFO:root:Epoch: 7 loss: 0.2014 accuracy0.9259 val_loss: 1.8026 val_accuracy0.5747%

INFO:root:Epoch: 8 loss: 0.2116 accuracy0.9183 val_loss: 1.7588 val_accuracy0.5490%

INFO:root:Epoch: 9 loss: 0.2033 accuracy0.9234 val_loss: 1.5077 val_accuracy0.6508%

INFO:root:Epoch: 10 loss: 0.1931 accuracy0.9287 val_loss: 1.6820 val_accuracy0.6155%

INFO:root:Epoch: 11 loss: 0.1590 accuracy0.9404 val_loss: 1.2588 val_accuracy0.6934%

INFO:root:Epoch: 12 loss: 0.1481 accuracy0.9423 val_loss: 0.4968 val_accuracy0.8867%

INFO:root:Epoch: 13 loss: 0.1494 accuracy0.9444 val_loss: 0.6835 val_accuracy0.7984%

INFO:root:Epoch: 14 loss: 0.1448 accuracy0.9450 val_loss: 0.3023 val_accuracy0.9157%

INFO:root:Epoch: 15 loss: 0.1449 accuracy0.9415 val_loss: 0.2292 val_accuracy0.9282%

INFO:root:Epoch: 16 loss: 0.1252 accuracy0.9524 val_loss: 0.2878 val_accuracy0.9152%

INFO:root:Epoch: 17 loss: 0.1152 accuracy0.9568 val_loss: 0.2715 val_accuracy0.9266%

INFO:root:Epoch: 18 loss: 0.1191 accuracy0.9544 val_loss: 0.2679 val_accuracy0.9155%

INFO:root:Epoch: 19 loss: 0.1214 accuracy0.9524 val_loss: 0.2378 val_accuracy0.9273%

INFO:root:Epoch: 20 loss: 0.1310 accuracy0.9492 val_loss: 0.1871 val_accuracy0.9413%

INFO:root:Epoch: 21 loss: 0.1059 accuracy0.9584 val_loss: 0.1551 val_accuracy0.9332%

INFO:root:Epoch: 22 loss: 0.1038 accuracy0.9584 val_loss: 0.1485 val_accuracy0.9411%

INFO:root:Epoch: 23 loss: 0.1220 accuracy0.9511 val_loss: 0.2117 val_accuracy0.9237%

INFO:root:Epoch: 24 loss: 0.0947 accuracy0.9629 val_loss: 0.3072 val_accuracy0.9015%

INFO:root:Epoch: 25 loss: 0.0943 accuracy0.9633 val_loss: 0.1902 val_accuracy0.9275%

INFO:root:Epoch: 26 loss: 0.0966 accuracy0.9639 val_loss: 0.1934 val_accuracy0.9381%

INFO:root:Epoch: 27 loss: 0.0914 accuracy0.9635 val_loss: 0.1467 val_accuracy0.9533%

INFO:root:Epoch: 28 loss: 0.0755 accuracy0.9705 val_loss: 0.1586 val_accuracy0.9473%

INFO:root:Epoch: 29 loss: 0.0825 accuracy0.9672 val_loss: 0.1773 val_accuracy0.9394%

INFO:root:Epoch: 30 loss: 0.0974 accuracy0.9634 val_loss: 0.1758 val_accuracy0.9463%

INFO:root:Epoch: 31 loss: 0.0950 accuracy0.9620 val_loss: 0.4281 val_accuracy0.8886%

INFO:root:Epoch: 32 loss: 0.0951 accuracy0.9631 val_loss: 0.2531 val_accuracy0.9285%

INFO:root:Epoch: 33 loss: 0.0822 accuracy0.9692 val_loss: 0.1540 val_accuracy0.9375%

INFO:root:Epoch: 34 loss: 0.0756 accuracy0.9705 val_loss: 0.1835 val_accuracy0.9452%

INFO:root:Epoch: 35 loss: 0.0646 accuracy0.9749 val_loss: 0.1466 val_accuracy0.9417%

INFO:root:Epoch: 36 loss: 0.0574 accuracy0.9784 val_loss: 0.1200 val_accuracy0.9508%

INFO:root:Epoch: 37 loss: 0.0591 accuracy0.9772 val_loss: 0.2813 val_accuracy0.9162%

INFO:root:Epoch: 38 loss: 0.0827 accuracy0.9677 val_loss: 0.1449 val_accuracy0.9510%

INFO:root:Epoch: 39 loss: 0.0716 accuracy0.9713 val_loss: 0.1589 val_accuracy0.9490%

INFO:root:Epoch: 40 loss: 0.0761 accuracy0.9712 val_loss: 0.2953 val_accuracy0.9218%

INFO:root:Epoch: 41 loss: 0.0589 accuracy0.9776 val_loss: 0.1749 val_accuracy0.9435%

INFO:root:Epoch: 42 loss: 0.0588 accuracy0.9780 val_loss: 0.1812 val_accuracy0.9546%

INFO:root:Epoch: 43 loss: 0.0539 accuracy0.9798 val_loss: 0.1253 val_accuracy0.9491%

INFO:root:Epoch: 44 loss: 0.0632 accuracy0.9754 val_loss: 0.2460 val_accuracy0.9379%

INFO:root:Epoch: 45 loss: 0.0569 accuracy0.9793 val_loss: 0.1052 val_accuracy0.9628%

INFO:root:Epoch: 46 loss: 0.0668 accuracy0.9757 val_loss: 0.1842 val_accuracy0.9397%

INFO:root:Epoch: 47 loss: 0.0539 accuracy0.9798 val_loss: 0.1652 val_accuracy0.9535%

INFO:root:Epoch: 48 loss: 0.0485 accuracy0.9809 val_loss: 0.1420 val_accuracy0.9426%

INFO:root:Epoch: 49 loss: 0.0375 accuracy0.9864 val_loss: 0.0858 val_accuracy0.9638%

INFO:root:Epoch: 50 loss: 0.0326 accuracy0.9881 val_loss: 0.0916 val_accuracy0.9670%

INFO:root:model summary:
INFO:root:Model: "ZF_UNET_224"
INFO:root:__________________________________________________________________________________________________
INFO:root:Layer (type)                    Output Shape         Param #     Connected to                     
INFO:root:==================================================================================================
INFO:root:input_1 (InputLayer)            [(None, 1, 224, 2)]  0                                            
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d (Conv2D)                 (None, 1, 224, 32)   224         input_1[0][0]                    
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization (BatchNorma (None, 1, 224, 32)   128         conv2d[0][0]                     
INFO:root:__________________________________________________________________________________________________
INFO:root:activation (Activation)         (None, 1, 224, 32)   0           batch_normalization[0][0]        
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_1 (Conv2D)               (None, 1, 224, 32)   3104        activation[0][0]                 
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_1 (BatchNor (None, 1, 224, 32)   128         conv2d_1[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_1 (Activation)       (None, 1, 224, 32)   0           batch_normalization_1[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:max_pooling2d (MaxPooling2D)    (None, 1, 112, 32)   0           activation_1[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_2 (Conv2D)               (None, 1, 112, 64)   6208        max_pooling2d[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_2 (BatchNor (None, 1, 112, 64)   256         conv2d_2[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_2 (Activation)       (None, 1, 112, 64)   0           batch_normalization_2[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_3 (Conv2D)               (None, 1, 112, 64)   12352       activation_2[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_3 (BatchNor (None, 1, 112, 64)   256         conv2d_3[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_3 (Activation)       (None, 1, 112, 64)   0           batch_normalization_3[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:max_pooling2d_1 (MaxPooling2D)  (None, 1, 56, 64)    0           activation_3[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_4 (Conv2D)               (None, 1, 56, 128)   24704       max_pooling2d_1[0][0]            
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_4 (BatchNor (None, 1, 56, 128)   512         conv2d_4[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_4 (Activation)       (None, 1, 56, 128)   0           batch_normalization_4[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_5 (Conv2D)               (None, 1, 56, 128)   49280       activation_4[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_5 (BatchNor (None, 1, 56, 128)   512         conv2d_5[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_5 (Activation)       (None, 1, 56, 128)   0           batch_normalization_5[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:max_pooling2d_2 (MaxPooling2D)  (None, 1, 28, 128)   0           activation_5[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_6 (Conv2D)               (None, 1, 28, 256)   98560       max_pooling2d_2[0][0]            
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_6 (BatchNor (None, 1, 28, 256)   1024        conv2d_6[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_6 (Activation)       (None, 1, 28, 256)   0           batch_normalization_6[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_7 (Conv2D)               (None, 1, 28, 256)   196864      activation_6[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_7 (BatchNor (None, 1, 28, 256)   1024        conv2d_7[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_7 (Activation)       (None, 1, 28, 256)   0           batch_normalization_7[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:max_pooling2d_3 (MaxPooling2D)  (None, 1, 14, 256)   0           activation_7[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_8 (Conv2D)               (None, 1, 14, 512)   393728      max_pooling2d_3[0][0]            
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_8 (BatchNor (None, 1, 14, 512)   2048        conv2d_8[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_8 (Activation)       (None, 1, 14, 512)   0           batch_normalization_8[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_9 (Conv2D)               (None, 1, 14, 512)   786944      activation_8[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_9 (BatchNor (None, 1, 14, 512)   2048        conv2d_9[0][0]                   
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_9 (Activation)       (None, 1, 14, 512)   0           batch_normalization_9[0][0]      
INFO:root:__________________________________________________________________________________________________
INFO:root:max_pooling2d_4 (MaxPooling2D)  (None, 1, 7, 512)    0           activation_9[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_10 (Conv2D)              (None, 1, 7, 1024)   1573888     max_pooling2d_4[0][0]            
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_10 (BatchNo (None, 1, 7, 1024)   4096        conv2d_10[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_10 (Activation)      (None, 1, 7, 1024)   0           batch_normalization_10[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_11 (Conv2D)              (None, 1, 7, 1024)   3146752     activation_10[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_11 (BatchNo (None, 1, 7, 1024)   4096        conv2d_11[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_11 (Activation)      (None, 1, 7, 1024)   0           batch_normalization_11[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:up_sampling2d (UpSampling2D)    (None, 1, 14, 1024)  0           activation_11[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:concatenate (Concatenate)       (None, 1, 14, 1536)  0           up_sampling2d[0][0]              
INFO:root:                                                                 activation_9[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_12 (Conv2D)              (None, 1, 14, 512)   2359808     concatenate[0][0]                
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_12 (BatchNo (None, 1, 14, 512)   2048        conv2d_12[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_12 (Activation)      (None, 1, 14, 512)   0           batch_normalization_12[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_13 (Conv2D)              (None, 1, 14, 512)   786944      activation_12[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_13 (BatchNo (None, 1, 14, 512)   2048        conv2d_13[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_13 (Activation)      (None, 1, 14, 512)   0           batch_normalization_13[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:up_sampling2d_1 (UpSampling2D)  (None, 1, 28, 512)   0           activation_13[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:concatenate_1 (Concatenate)     (None, 1, 28, 768)   0           up_sampling2d_1[0][0]            
INFO:root:                                                                 activation_7[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_14 (Conv2D)              (None, 1, 28, 256)   590080      concatenate_1[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_14 (BatchNo (None, 1, 28, 256)   1024        conv2d_14[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_14 (Activation)      (None, 1, 28, 256)   0           batch_normalization_14[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_15 (Conv2D)              (None, 1, 28, 256)   196864      activation_14[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_15 (BatchNo (None, 1, 28, 256)   1024        conv2d_15[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_15 (Activation)      (None, 1, 28, 256)   0           batch_normalization_15[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:up_sampling2d_2 (UpSampling2D)  (None, 1, 56, 256)   0           activation_15[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:concatenate_2 (Concatenate)     (None, 1, 56, 384)   0           up_sampling2d_2[0][0]            
INFO:root:                                                                 activation_5[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_16 (Conv2D)              (None, 1, 56, 128)   147584      concatenate_2[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_16 (BatchNo (None, 1, 56, 128)   512         conv2d_16[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_16 (Activation)      (None, 1, 56, 128)   0           batch_normalization_16[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_17 (Conv2D)              (None, 1, 56, 128)   49280       activation_16[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_17 (BatchNo (None, 1, 56, 128)   512         conv2d_17[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_17 (Activation)      (None, 1, 56, 128)   0           batch_normalization_17[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:up_sampling2d_3 (UpSampling2D)  (None, 1, 112, 128)  0           activation_17[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:concatenate_3 (Concatenate)     (None, 1, 112, 192)  0           up_sampling2d_3[0][0]            
INFO:root:                                                                 activation_3[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_18 (Conv2D)              (None, 1, 112, 64)   36928       concatenate_3[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_18 (BatchNo (None, 1, 112, 64)   256         conv2d_18[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_18 (Activation)      (None, 1, 112, 64)   0           batch_normalization_18[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_19 (Conv2D)              (None, 1, 112, 64)   12352       activation_18[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_19 (BatchNo (None, 1, 112, 64)   256         conv2d_19[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_19 (Activation)      (None, 1, 112, 64)   0           batch_normalization_19[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:up_sampling2d_4 (UpSampling2D)  (None, 1, 224, 64)   0           activation_19[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:concatenate_4 (Concatenate)     (None, 1, 224, 96)   0           up_sampling2d_4[0][0]            
INFO:root:                                                                 activation_1[0][0]               
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_20 (Conv2D)              (None, 1, 224, 32)   9248        concatenate_4[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_20 (BatchNo (None, 1, 224, 32)   128         conv2d_20[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_20 (Activation)      (None, 1, 224, 32)   0           batch_normalization_20[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_21 (Conv2D)              (None, 1, 224, 32)   3104        activation_20[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:batch_normalization_21 (BatchNo (None, 1, 224, 32)   128         conv2d_21[0][0]                  
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_21 (Activation)      (None, 1, 224, 32)   0           batch_normalization_21[0][0]     
INFO:root:__________________________________________________________________________________________________
INFO:root:spatial_dropout2d (SpatialDropo (None, 1, 224, 32)   0           activation_21[0][0]              
INFO:root:__________________________________________________________________________________________________
INFO:root:conv2d_22 (Conv2D)              (None, 1, 224, 2)    66          spatial_dropout2d[0][0]          
INFO:root:__________________________________________________________________________________________________
INFO:root:activation_22 (Activation)      (None, 1, 224, 2)    0           conv2d_22[0][0]                  
INFO:root:==================================================================================================
INFO:root:Total params: 10,508,930
INFO:root:Trainable params: 10,496,898
INFO:root:Non-trainable params: 12,032
INFO:root:__________________________________________________________________________________________________
INFO:root:tmodel performance per fold and showing results:
INFO:root:avg (SD) accuracy:0.9558506630500302 (0.010196988969117079)
INFO:root:avg (SD) precision:0.9546574161394791 (0.016423128689644673)
INFO:root:avg (SD) recall:0.9558593607429484 (0.010931596983352282)
INFO:root:avg (SD) fscore:0.9551914581514314 (0.011557837805289345)
INFO:root:avg (SD) fw:0.9558853693491738 (0.010162775170444605)
INFO:root:mean_time=0.4485318153165281
INFO:root:testing confusionmatrix:
INFO:root:testing confusionmatrix:[[108995.   4792.]
 [  7148. 144505.]]
INFO:root:testing acc:0.9550180831826401
INFO:root:testing fscore:[0.9480711520897664, 0.9603256354876226]
INFO:root:testing weighted fscore:0.9549636988342274
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f47a4178490>
DEBUG:matplotlib.colorbar:Using auto colorbar locator on colorbar
DEBUG:matplotlib.colorbar:locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x7f47a4178490>
DEBUG:matplotlib.colorbar:Setting pcolormesh
INFO:root:mean_time_total=216.65757822291926
